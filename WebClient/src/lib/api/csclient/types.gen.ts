// This file is auto-generated by @hey-api/openapi-ts

/**
 * Body_patch_school_logo_v1_schools_logo_patch
 */
export type BodyPatchSchoolLogoV1SchoolsLogoPatch = {
    /**
     * Img
     */
    img: Blob | File;
};

/**
 * Body_request_access_token_v1_auth_login_post
 */
export type BodyRequestAccessTokenV1AuthLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * Body_update_user_avatar_endpoint_v1_users_avatar_patch
 */
export type BodyUpdateUserAvatarEndpointV1UsersAvatarPatch = {
    /**
     * Img
     */
    img: Blob | File;
};

/**
 * DailyFinancialReport
 * A model representing the daily sales and purchases report.
 *
 * Document Name: Financial Report for the Month of [MONTH], [YEAR]
 */
export type DailyFinancialReport = {
    /**
     * Parent
     */
    parent: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus | null;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Notedby
     */
    notedBy?: string | null;
};

/**
 * DailyFinancialReportEntry
 * A model representing an entry in the daily sales and purchases report.
 */
export type DailyFinancialReportEntry = {
    /**
     * Day
     */
    day: number;
    /**
     * Parent
     */
    parent: string;
    /**
     * Sales
     */
    sales: number;
    /**
     * Purchases
     */
    purchases: number;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * JWTToken
 * A model representing an encoded JWT token.
 */
export type JwtToken = {
    /**
     * Uid
     */
    uid: string;
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * MonthlyReport
 * A model representing a monthly report in the system.
 *
 * Document Names:
 * - Statement of Receipts, Disbursements, and Utilization of Income (School Canteen)
 * - Monthly Summarized Canteen Report for SY [YEAR-YEAR]
 */
export type MonthlyReport = {
    /**
     * Id
     * The month and year of the report.
     */
    id: string;
    /**
     * Name
     * The name of the report.
     */
    name?: string | null;
    /**
     * Submittedbyschool
     * The school that submitted the report.
     */
    submittedBySchool: number;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Preparedby
     * The user who prepared the report.
     */
    preparedBy: string | null;
    /**
     * Notedby
     * The user who noted the report.
     */
    notedBy?: string | null;
    /**
     * Datecreated
     * The date and time when the report was created.
     */
    dateCreated?: string;
    /**
     * Dateapproved
     * The date and time when the report was approved.
     */
    dateApproved?: string | null;
    /**
     * Datereceived
     * The date and time when the report was received.
     */
    dateReceived?: string | null;
    /**
     * Lastmodified
     * The last time the report was modified.
     */
    lastModified?: string;
    /**
     * Receivedbydailyfinancialreport
     */
    receivedByDailyFinancialReport?: string | null;
    /**
     * Receivedbyoperatingexpensesreport
     */
    receivedByOperatingExpensesReport?: string | null;
    /**
     * Receivedbyadministrativeexpensesreport
     */
    receivedByAdministrativeExpensesReport?: string | null;
    /**
     * Receivedbyclinicfundreport
     */
    receivedByClinicFundReport?: string | null;
    /**
     * Receivedbysupplementaryfeedingfundreport
     */
    receivedBySupplementaryFeedingFundReport?: string | null;
    /**
     * Receivedbyhefundreport
     */
    receivedByHEFundReport?: string | null;
    /**
     * Receivedbyfacultyandstudentdevfundreport
     */
    receivedByFacultyAndStudentDevFundReport?: string | null;
    /**
     * Receivedbyschooloperationfundreport
     */
    receivedBySchoolOperationFundReport?: string | null;
    /**
     * Receivedbyrevolvingfundreport
     */
    receivedByRevolvingFundReport?: string | null;
};

/**
 * Notification
 * A model representing a notification in the system.
 */
export type Notification = {
    /**
     * Id
     * The unique identifier for the notification.
     */
    id?: string;
    /**
     * Created
     * The timestamp for when the notification was created.
     */
    created?: string;
    /**
     * Ownerid
     * The ID of the user who owns the notification.
     */
    ownerId?: string;
    /**
     * Title
     * The title of the notification.
     */
    title: string;
    /**
     * Content
     * The content of the notification.
     */
    content: string;
    /**
     * Important
     * Indicates whether the notification is important.
     */
    important?: boolean;
    /**
     * The type of the notification. (To be used by the frontend for styling purposes.)
     */
    type?: NotificationType;
    /**
     * Archived
     * Indicates whether the notification has been archived.
     */
    archived?: boolean;
};

/**
 * NotificationArchiveRequest
 * A model representing a request to archive a notification.
 */
export type NotificationArchiveRequest = {
    /**
     * Notification Id
     */
    notification_id: string;
};

/**
 * NotificationType
 * Enumeration for notification types.
 */
export type NotificationType = 'info' | 'warning' | 'error' | 'success' | 'mail' | 'security';

/**
 * OTPRecoveryCode
 * A model representing a request to verify an OTP recovery code.
 */
export type OtpRecoveryCode = {
    /**
     * Recovery Code
     */
    recovery_code: string;
    /**
     * Nonce
     */
    nonce: string;
};

/**
 * OTPToken
 * A model representing a request to create an OTP token.
 */
export type OtpToken = {
    /**
     * Secret
     */
    secret: string;
    /**
     * Recovery Code
     */
    recovery_code: string;
    /**
     * Provisioning Uri
     */
    provisioning_uri: string;
};

/**
 * OTPVerificationToken
 * A model representing a request to verify an OTP token.
 */
export type OtpVerificationToken = {
    /**
     * Otp
     */
    otp: string;
    /**
     * Nonce
     */
    nonce: string;
};

/**
 * ReportStatus
 */
export type ReportStatus = 'draft' | 'review' | 'approved' | 'rejected' | 'received' | 'archived';

/**
 * Role
 * A model representing user roles in the system.
 */
export type Role = {
    /**
     * Id
     */
    id?: number | null;
    /**
     * Description
     * WebAdmin, Canteen Manager, Principal, Administrator, or Superintendent
     */
    description: string;
    /**
     * Modifiable
     * Whether the role's characteristics can be modified.
     */
    modifiable?: boolean;
};

/**
 * School
 * A model representing schools in the system.
 */
export type School = {
    /**
     * Id
     * The unique identifier for the school.
     */
    id?: number | null;
    /**
     * Name
     * The name of the school.
     */
    name: string;
    /**
     * Address
     * The address of the school.
     */
    address?: string | null;
    /**
     * Phone
     * The phone number of the school.
     */
    phone?: string | null;
    /**
     * Email
     * The email address of the school.
     */
    email?: string | null;
    /**
     * Website
     * The website of the school.
     */
    website?: string | null;
    /**
     * Logourn
     * A link or identifier to the schools's logo within the file storage server.
     */
    logoUrn?: string | null;
    /**
     * Datecreated
     * The timestamp when the record was created.
     */
    dateCreated?: string;
    /**
     * Lastmodified
     * The last time the user information was modified.
     */
    lastModified?: string;
};

/**
 * SchoolCreate
 * A model for creating a new school.
 */
export type SchoolCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Phone
     */
    phone?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Website
     */
    website?: string | null;
};

/**
 * UserCreate
 * A model used for creating new user accounts.
 */
export type UserCreate = {
    /**
     * Username
     */
    username: string;
    /**
     * Roleid
     */
    roleId: number;
    /**
     * Password
     */
    password: string;
};

/**
 * UserPasswordResetRequest
 * A model used for resetting a user's password.
 */
export type UserPasswordResetRequest = {
    /**
     * New Password
     */
    new_password: string;
    /**
     * Recovery Token
     */
    recovery_token: string;
};

/**
 * UserPublic
 * A model representing a user without sensitive information.
 */
export type UserPublic = {
    /**
     * Id
     */
    id: string;
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string | null;
    /**
     * Namefirst
     */
    nameFirst: string | null;
    /**
     * Namemiddle
     */
    nameMiddle: string | null;
    /**
     * Namelast
     */
    nameLast: string | null;
    /**
     * Position
     */
    position: string | null;
    /**
     * Avatarurn
     */
    avatarUrn: string | null;
    /**
     * Signatureurn
     */
    signatureUrn: string | null;
    /**
     * Schoolid
     */
    schoolId: number | null;
    /**
     * Roleid
     */
    roleId: number;
    /**
     * Deactivated
     */
    deactivated: boolean;
    /**
     * Finishedtutorials
     */
    finishedTutorials: string;
    /**
     * Otpverified
     */
    otpVerified: boolean;
    /**
     * Oauthlinkedgoogleid
     */
    oauthLinkedGoogleId: string | null;
    /**
     * Oauthlinkedmicrosoftid
     */
    oauthLinkedMicrosoftId: string | null;
    /**
     * Forceupdateinfo
     */
    forceUpdateInfo: boolean;
    /**
     * Emailverified
     */
    emailVerified: boolean;
    /**
     * Datecreated
     */
    dateCreated: string;
    /**
     * Lastmodified
     */
    lastModified: string;
    /**
     * Lastloggedintime
     */
    lastLoggedInTime: string | null;
    /**
     * Lastloggedinip
     */
    lastLoggedInIp: string | null;
};

/**
 * UserUpdate
 * A model used when updating user information.
 */
export type UserUpdate = {
    /**
     * Id
     */
    id: string;
    /**
     * Username
     */
    username?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Namefirst
     */
    nameFirst?: string | null;
    /**
     * Namemiddle
     */
    nameMiddle?: string | null;
    /**
     * Namelast
     */
    nameLast?: string | null;
    /**
     * Position
     */
    position?: string | null;
    /**
     * Schoolid
     */
    schoolId?: number | null;
    /**
     * Roleid
     */
    roleId?: number | null;
    /**
     * Deactivated
     */
    deactivated?: boolean | null;
    /**
     * Finishedtutorials
     */
    finishedTutorials?: string | null;
    /**
     * Forceupdateinfo
     */
    forceUpdateInfo?: boolean | null;
    /**
     * Password
     */
    password?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type RequestVerificationEmailV1AuthEmailRequestPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/email/request';
};

export type RequestVerificationEmailV1AuthEmailRequestPostResponses = {
    /**
     * Response Request Verification Email V1 Auth Email Request Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type RequestVerificationEmailV1AuthEmailRequestPostResponse = RequestVerificationEmailV1AuthEmailRequestPostResponses[keyof RequestVerificationEmailV1AuthEmailRequestPostResponses];

export type VerifyEmailV1AuthEmailVerifyPostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Token
         */
        token: string;
    };
    url: '/v1/auth/email/verify';
};

export type VerifyEmailV1AuthEmailVerifyPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyEmailV1AuthEmailVerifyPostError = VerifyEmailV1AuthEmailVerifyPostErrors[keyof VerifyEmailV1AuthEmailVerifyPostErrors];

export type VerifyEmailV1AuthEmailVerifyPostResponses = {
    /**
     * Response Verify Email V1 Auth Email Verify Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type VerifyEmailV1AuthEmailVerifyPostResponse = VerifyEmailV1AuthEmailVerifyPostResponses[keyof VerifyEmailV1AuthEmailVerifyPostResponses];

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Username
         */
        username: string;
        /**
         * Email
         */
        email: string;
    };
    url: '/v1/auth/email/recovery/request';
};

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostError = RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostErrors[keyof RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostErrors];

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponses = {
    /**
     * Response Request Password Recovery V1 Auth Email Recovery Request Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponse = RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponses[keyof RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponses];

export type ResetPasswordV1AuthEmailRecoveryResetPostData = {
    body: UserPasswordResetRequest;
    path?: never;
    query?: never;
    url: '/v1/auth/email/recovery/reset';
};

export type ResetPasswordV1AuthEmailRecoveryResetPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetPasswordV1AuthEmailRecoveryResetPostError = ResetPasswordV1AuthEmailRecoveryResetPostErrors[keyof ResetPasswordV1AuthEmailRecoveryResetPostErrors];

export type ResetPasswordV1AuthEmailRecoveryResetPostResponses = {
    /**
     * Response Reset Password V1 Auth Email Recovery Reset Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type ResetPasswordV1AuthEmailRecoveryResetPostResponse = ResetPasswordV1AuthEmailRecoveryResetPostResponses[keyof ResetPasswordV1AuthEmailRecoveryResetPostResponses];

export type GoogleOauthLoginV1AuthOauthGoogleLoginGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/google/login';
};

export type GoogleOauthLoginV1AuthOauthGoogleLoginGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Code
         */
        code: string;
    };
    url: '/v1/auth/oauth/google/callback';
};

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetError = GoogleOauthCallbackV1AuthOauthGoogleCallbackGetErrors[keyof GoogleOauthCallbackV1AuthOauthGoogleCallbackGetErrors];

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Code
         */
        code: string;
    };
    url: '/v1/auth/oauth/google/link';
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetError = OauthLinkGoogleV1AuthOauthGoogleLinkGetErrors[keyof OauthLinkGoogleV1AuthOauthGoogleLinkGetErrors];

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetResponses = {
    /**
     * Response Oauth Link Google V1 Auth Oauth Google Link Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetResponse = OauthLinkGoogleV1AuthOauthGoogleLinkGetResponses[keyof OauthLinkGoogleV1AuthOauthGoogleLinkGetResponses];

export type OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/google/unlink';
};

export type OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponses = {
    /**
     * Response Oauth Unlink Google V1 Auth Oauth Google Unlink Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponse = OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponses[keyof OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponses];

export type MicrosoftOauthLoginV1AuthOauthMicrosoftLoginGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/microsoft/login';
};

export type MicrosoftOauthLoginV1AuthOauthMicrosoftLoginGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type MicrosoftOauthCallbackV1AuthOauthMicrosoftCallbackGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/microsoft/callback';
};

export type MicrosoftOauthCallbackV1AuthOauthMicrosoftCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type FacebookOauthLoginV1AuthOauthFacebookLoginGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/facebook/login';
};

export type FacebookOauthLoginV1AuthOauthFacebookLoginGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type FacebookOauthCallbackV1AuthOauthFacebookCallbackGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/facebook/callback';
};

export type FacebookOauthCallbackV1AuthOauthFacebookCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GenerateMfaOtpV1AuthMfaOtpGeneratePostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/generate';
};

export type GenerateMfaOtpV1AuthMfaOtpGeneratePostResponses = {
    /**
     * Successful Response
     */
    200: OtpToken;
};

export type GenerateMfaOtpV1AuthMfaOtpGeneratePostResponse = GenerateMfaOtpV1AuthMfaOtpGeneratePostResponses[keyof GenerateMfaOtpV1AuthMfaOtpGeneratePostResponses];

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Otp
         */
        otp: string;
    };
    url: '/v1/auth/mfa/otp/verify';
};

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostError = VerifyMfaOtpV1AuthMfaOtpVerifyPostErrors[keyof VerifyMfaOtpV1AuthMfaOtpVerifyPostErrors];

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostResponses = {
    /**
     * Response Verify Mfa Otp V1 Auth Mfa Otp Verify Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostResponse = VerifyMfaOtpV1AuthMfaOtpVerifyPostResponses[keyof VerifyMfaOtpV1AuthMfaOtpVerifyPostResponses];

export type ValidateMfaOtpV1AuthMfaOtpValidatePostData = {
    body: OtpVerificationToken;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/validate';
};

export type ValidateMfaOtpV1AuthMfaOtpValidatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ValidateMfaOtpV1AuthMfaOtpValidatePostError = ValidateMfaOtpV1AuthMfaOtpValidatePostErrors[keyof ValidateMfaOtpV1AuthMfaOtpValidatePostErrors];

export type ValidateMfaOtpV1AuthMfaOtpValidatePostResponses = {
    /**
     * Successful Response
     */
    200: JwtToken;
};

export type ValidateMfaOtpV1AuthMfaOtpValidatePostResponse = ValidateMfaOtpV1AuthMfaOtpValidatePostResponses[keyof ValidateMfaOtpV1AuthMfaOtpValidatePostResponses];

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostData = {
    body: OtpRecoveryCode;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/recovery';
};

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostError = MfaOtpRecoveryV1AuthMfaOtpRecoveryPostErrors[keyof MfaOtpRecoveryV1AuthMfaOtpRecoveryPostErrors];

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponses = {
    /**
     * Successful Response
     */
    200: JwtToken;
};

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponse = MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponses[keyof MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponses];

export type DisableMfaOtpV1AuthMfaOtpDisablePostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/disable';
};

export type DisableMfaOtpV1AuthMfaOtpDisablePostResponses = {
    /**
     * Response Disable Mfa Otp V1 Auth Mfa Otp Disable Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type DisableMfaOtpV1AuthMfaOtpDisablePostResponse = DisableMfaOtpV1AuthMfaOtpDisablePostResponses[keyof DisableMfaOtpV1AuthMfaOtpDisablePostResponses];

export type CreateNewUserV1AuthCreatePostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/v1/auth/create';
};

export type CreateNewUserV1AuthCreatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateNewUserV1AuthCreatePostError = CreateNewUserV1AuthCreatePostErrors[keyof CreateNewUserV1AuthCreatePostErrors];

export type CreateNewUserV1AuthCreatePostResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type CreateNewUserV1AuthCreatePostResponse = CreateNewUserV1AuthCreatePostResponses[keyof CreateNewUserV1AuthCreatePostResponses];

export type RequestAccessTokenV1AuthLoginPostData = {
    body: BodyRequestAccessTokenV1AuthLoginPost;
    path?: never;
    query?: never;
    url: '/v1/auth/login';
};

export type RequestAccessTokenV1AuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RequestAccessTokenV1AuthLoginPostError = RequestAccessTokenV1AuthLoginPostErrors[keyof RequestAccessTokenV1AuthLoginPostErrors];

export type RequestAccessTokenV1AuthLoginPostResponses = {
    /**
     * Response Request Access Token V1 Auth Login Post
     * Successful Response
     */
    200: JwtToken | {
        [key: string]: string;
    };
};

export type RequestAccessTokenV1AuthLoginPostResponse = RequestAccessTokenV1AuthLoginPostResponses[keyof RequestAccessTokenV1AuthLoginPostResponses];

export type GetAllRolesV1AuthRolesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/roles';
};

export type GetAllRolesV1AuthRolesGetResponses = {
    /**
     * Response Get All Roles V1 Auth Roles Get
     * Successful Response
     */
    200: Array<Role>;
};

export type GetAllRolesV1AuthRolesGetResponse = GetAllRolesV1AuthRolesGetResponses[keyof GetAllRolesV1AuthRolesGetResponses];

export type GetOauthConfigV1AuthConfigOauthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/config/oauth';
};

export type GetOauthConfigV1AuthConfigOauthGetResponses = {
    /**
     * Response Get Oauth Config V1 Auth Config Oauth Get
     * Successful Response
     */
    200: {
        [key: string]: boolean;
    };
};

export type GetOauthConfigV1AuthConfigOauthGetResponse = GetOauthConfigV1AuthConfigOauthGetResponses[keyof GetOauthConfigV1AuthConfigOauthGetResponses];

export type GetUsersQuantityEndpointV1UsersQuantityGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/users/quantity';
};

export type GetUsersQuantityEndpointV1UsersQuantityGetResponses = {
    /**
     * Response Get Users Quantity Endpoint V1 Users Quantity Get
     * Successful Response
     */
    200: number;
};

export type GetUsersQuantityEndpointV1UsersQuantityGetResponse = GetUsersQuantityEndpointV1UsersQuantityGetResponses[keyof GetUsersQuantityEndpointV1UsersQuantityGetResponses];

export type GetUserProfileEndpointV1UsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/users/me';
};

export type GetUserProfileEndpointV1UsersMeGetResponses = {
    /**
     * Response Get User Profile Endpoint V1 Users Me Get
     * Successful Response
     */
    200: [
        UserPublic,
        Array<string>
    ];
};

export type GetUserProfileEndpointV1UsersMeGetResponse = GetUserProfileEndpointV1UsersMeGetResponses[keyof GetUserProfileEndpointV1UsersMeGetResponses];

export type GetAllUsersEndpointV1UsersAllGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/v1/users/all';
};

export type GetAllUsersEndpointV1UsersAllGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllUsersEndpointV1UsersAllGetError = GetAllUsersEndpointV1UsersAllGetErrors[keyof GetAllUsersEndpointV1UsersAllGetErrors];

export type GetAllUsersEndpointV1UsersAllGetResponses = {
    /**
     * Response Get All Users Endpoint V1 Users All Get
     * Successful Response
     */
    200: Array<UserPublic>;
};

export type GetAllUsersEndpointV1UsersAllGetResponse = GetAllUsersEndpointV1UsersAllGetResponses[keyof GetAllUsersEndpointV1UsersAllGetResponses];

export type GetUserEndpointV1UsersGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/';
};

export type GetUserEndpointV1UsersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserEndpointV1UsersGetError = GetUserEndpointV1UsersGetErrors[keyof GetUserEndpointV1UsersGetErrors];

export type GetUserEndpointV1UsersGetResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type GetUserEndpointV1UsersGetResponse = GetUserEndpointV1UsersGetResponses[keyof GetUserEndpointV1UsersGetResponses];

export type UpdateUserEndpointV1UsersPatchData = {
    body: UserUpdate;
    path?: never;
    query?: never;
    url: '/v1/users/';
};

export type UpdateUserEndpointV1UsersPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserEndpointV1UsersPatchError = UpdateUserEndpointV1UsersPatchErrors[keyof UpdateUserEndpointV1UsersPatchErrors];

export type UpdateUserEndpointV1UsersPatchResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type UpdateUserEndpointV1UsersPatchResponse = UpdateUserEndpointV1UsersPatchResponses[keyof UpdateUserEndpointV1UsersPatchResponses];

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteData = {
    body?: never;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/avatar';
};

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteError = DeleteUserAvatarEndpointV1UsersAvatarDeleteErrors[keyof DeleteUserAvatarEndpointV1UsersAvatarDeleteErrors];

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserAvatarEndpointV1UsersAvatarGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Fn
         */
        fn: string;
    };
    url: '/v1/users/avatar';
};

export type GetUserAvatarEndpointV1UsersAvatarGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserAvatarEndpointV1UsersAvatarGetError = GetUserAvatarEndpointV1UsersAvatarGetErrors[keyof GetUserAvatarEndpointV1UsersAvatarGetErrors];

export type GetUserAvatarEndpointV1UsersAvatarGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchData = {
    body: BodyUpdateUserAvatarEndpointV1UsersAvatarPatch;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/avatar';
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchError = UpdateUserAvatarEndpointV1UsersAvatarPatchErrors[keyof UpdateUserAvatarEndpointV1UsersAvatarPatchErrors];

export type UpdateUserAvatarEndpointV1UsersAvatarPatchResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchResponse = UpdateUserAvatarEndpointV1UsersAvatarPatchResponses[keyof UpdateUserAvatarEndpointV1UsersAvatarPatchResponses];

export type CreateSchoolEndpointV1SchoolsCreatePostData = {
    body: SchoolCreate;
    path?: never;
    query?: never;
    url: '/v1/schools/create';
};

export type CreateSchoolEndpointV1SchoolsCreatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolEndpointV1SchoolsCreatePostError = CreateSchoolEndpointV1SchoolsCreatePostErrors[keyof CreateSchoolEndpointV1SchoolsCreatePostErrors];

export type CreateSchoolEndpointV1SchoolsCreatePostResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type CreateSchoolEndpointV1SchoolsCreatePostResponse = CreateSchoolEndpointV1SchoolsCreatePostResponses[keyof CreateSchoolEndpointV1SchoolsCreatePostResponses];

export type GetSchoolsQuantityEndpointV1SchoolsQuantityGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/schools/quantity';
};

export type GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponses = {
    /**
     * Response Get Schools Quantity Endpoint V1 Schools Quantity Get
     * Successful Response
     */
    200: number;
};

export type GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponse = GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponses[keyof GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponses];

export type GetAssignedSchoolsEndpointV1SchoolsMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/schools/me';
};

export type GetAssignedSchoolsEndpointV1SchoolsMeGetResponses = {
    /**
     * Response Get Assigned Schools Endpoint V1 Schools Me Get
     * Successful Response
     */
    200: School | null;
};

export type GetAssignedSchoolsEndpointV1SchoolsMeGetResponse = GetAssignedSchoolsEndpointV1SchoolsMeGetResponses[keyof GetAssignedSchoolsEndpointV1SchoolsMeGetResponses];

export type GetAllSchoolsEndpointV1SchoolsAllGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/v1/schools/all';
};

export type GetAllSchoolsEndpointV1SchoolsAllGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllSchoolsEndpointV1SchoolsAllGetError = GetAllSchoolsEndpointV1SchoolsAllGetErrors[keyof GetAllSchoolsEndpointV1SchoolsAllGetErrors];

export type GetAllSchoolsEndpointV1SchoolsAllGetResponses = {
    /**
     * Response Get All Schools Endpoint V1 Schools All Get
     * Successful Response
     */
    200: Array<School>;
};

export type GetAllSchoolsEndpointV1SchoolsAllGetResponse = GetAllSchoolsEndpointV1SchoolsAllGetResponses[keyof GetAllSchoolsEndpointV1SchoolsAllGetResponses];

export type GetSchoolEndpointV1SchoolsGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * School Id
         */
        school_id: number;
    };
    url: '/v1/schools/';
};

export type GetSchoolEndpointV1SchoolsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolEndpointV1SchoolsGetError = GetSchoolEndpointV1SchoolsGetErrors[keyof GetSchoolEndpointV1SchoolsGetErrors];

export type GetSchoolEndpointV1SchoolsGetResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type GetSchoolEndpointV1SchoolsGetResponse = GetSchoolEndpointV1SchoolsGetResponses[keyof GetSchoolEndpointV1SchoolsGetResponses];

export type UpdateSchoolEndpointV1SchoolsPatchData = {
    body: School;
    path?: never;
    query?: never;
    url: '/v1/schools/';
};

export type UpdateSchoolEndpointV1SchoolsPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateSchoolEndpointV1SchoolsPatchError = UpdateSchoolEndpointV1SchoolsPatchErrors[keyof UpdateSchoolEndpointV1SchoolsPatchErrors];

export type UpdateSchoolEndpointV1SchoolsPatchResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type UpdateSchoolEndpointV1SchoolsPatchResponse = UpdateSchoolEndpointV1SchoolsPatchResponses[keyof UpdateSchoolEndpointV1SchoolsPatchResponses];

export type DeleteSchoolLogoV1SchoolsLogoDeleteData = {
    body?: never;
    path?: never;
    query: {
        /**
         * School Id
         */
        school_id: number;
    };
    url: '/v1/schools/logo';
};

export type DeleteSchoolLogoV1SchoolsLogoDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolLogoV1SchoolsLogoDeleteError = DeleteSchoolLogoV1SchoolsLogoDeleteErrors[keyof DeleteSchoolLogoV1SchoolsLogoDeleteErrors];

export type DeleteSchoolLogoV1SchoolsLogoDeleteResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type DeleteSchoolLogoV1SchoolsLogoDeleteResponse = DeleteSchoolLogoV1SchoolsLogoDeleteResponses[keyof DeleteSchoolLogoV1SchoolsLogoDeleteResponses];

export type GetSchoolLogoEndpointV1SchoolsLogoGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Fn
         */
        fn: string;
    };
    url: '/v1/schools/logo';
};

export type GetSchoolLogoEndpointV1SchoolsLogoGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolLogoEndpointV1SchoolsLogoGetError = GetSchoolLogoEndpointV1SchoolsLogoGetErrors[keyof GetSchoolLogoEndpointV1SchoolsLogoGetErrors];

export type GetSchoolLogoEndpointV1SchoolsLogoGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PatchSchoolLogoV1SchoolsLogoPatchData = {
    body: BodyPatchSchoolLogoV1SchoolsLogoPatch;
    path?: never;
    query: {
        /**
         * School Id
         */
        school_id: number;
    };
    url: '/v1/schools/logo';
};

export type PatchSchoolLogoV1SchoolsLogoPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchSchoolLogoV1SchoolsLogoPatchError = PatchSchoolLogoV1SchoolsLogoPatchErrors[keyof PatchSchoolLogoV1SchoolsLogoPatchErrors];

export type PatchSchoolLogoV1SchoolsLogoPatchResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type PatchSchoolLogoV1SchoolsLogoPatchResponse = PatchSchoolLogoV1SchoolsLogoPatchResponses[keyof PatchSchoolLogoV1SchoolsLogoPatchResponses];

export type GetNotificationQuantityV1NotificationsQuantityGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Show Archived
         */
        show_archived?: boolean;
    };
    url: '/v1/notifications/quantity';
};

export type GetNotificationQuantityV1NotificationsQuantityGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNotificationQuantityV1NotificationsQuantityGetError = GetNotificationQuantityV1NotificationsQuantityGetErrors[keyof GetNotificationQuantityV1NotificationsQuantityGetErrors];

export type GetNotificationQuantityV1NotificationsQuantityGetResponses = {
    /**
     * Response Get Notification Quantity V1 Notifications Quantity Get
     * Successful Response
     */
    200: number;
};

export type GetNotificationQuantityV1NotificationsQuantityGetResponse = GetNotificationQuantityV1NotificationsQuantityGetResponses[keyof GetNotificationQuantityV1NotificationsQuantityGetResponses];

export type GetNotificationV1NotificationsGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Notification Id
         */
        notification_id: string;
    };
    url: '/v1/notifications/';
};

export type GetNotificationV1NotificationsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNotificationV1NotificationsGetError = GetNotificationV1NotificationsGetErrors[keyof GetNotificationV1NotificationsGetErrors];

export type GetNotificationV1NotificationsGetResponses = {
    /**
     * Successful Response
     */
    200: Notification;
};

export type GetNotificationV1NotificationsGetResponse = GetNotificationV1NotificationsGetResponses[keyof GetNotificationV1NotificationsGetResponses];

export type ArchiveNotificationV1NotificationsPostData = {
    body: NotificationArchiveRequest;
    path?: never;
    query?: {
        /**
         * Unarchive
         */
        unarchive?: boolean;
    };
    url: '/v1/notifications/';
};

export type ArchiveNotificationV1NotificationsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ArchiveNotificationV1NotificationsPostError = ArchiveNotificationV1NotificationsPostErrors[keyof ArchiveNotificationV1NotificationsPostErrors];

export type ArchiveNotificationV1NotificationsPostResponses = {
    /**
     * Successful Response
     */
    200: Notification;
};

export type ArchiveNotificationV1NotificationsPostResponse = ArchiveNotificationV1NotificationsPostResponses[keyof ArchiveNotificationV1NotificationsPostResponses];

export type GetUserNotificationsV1NotificationsMeGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Unarchived Only
         */
        unarchived_only?: boolean;
        /**
         * Important Only
         */
        important_only?: boolean;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/v1/notifications/me';
};

export type GetUserNotificationsV1NotificationsMeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserNotificationsV1NotificationsMeGetError = GetUserNotificationsV1NotificationsMeGetErrors[keyof GetUserNotificationsV1NotificationsMeGetErrors];

export type GetUserNotificationsV1NotificationsMeGetResponses = {
    /**
     * Response Get User Notifications V1 Notifications Me Get
     * Successful Response
     */
    200: Array<Notification>;
};

export type GetUserNotificationsV1NotificationsMeGetResponse = GetUserNotificationsV1NotificationsMeGetResponses[keyof GetUserNotificationsV1NotificationsMeGetResponses];

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
    };
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/v1/reports/monthly/{school_id}';
};

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetError = GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetErrors[keyof GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetErrors];

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponses = {
    /**
     * Response Get All School Monthly Reports V1 Reports Monthly  School Id  Get
     * Successful Response
     */
    200: Array<MonthlyReport>;
};

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponse = GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponses[keyof GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponses];

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/monthly/{school_id}/{year}/{month}';
};

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteError = DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteErrors[keyof DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteErrors];

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/monthly/{school_id}/{year}/{month}';
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetError = GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetErrors[keyof GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetErrors];

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponses = {
    /**
     * Response Get School Monthly Report V1 Reports Monthly  School Id   Year   Month  Get
     * Successful Response
     */
    200: MonthlyReport | null;
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponse = GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponses[keyof GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponses];

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: {
        /**
         * Noted By
         */
        noted_by?: string | null;
    };
    url: '/v1/reports/monthly/{school_id}/{year}/{month}';
};

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchError = CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchErrors[keyof CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchErrors];

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponses = {
    /**
     * Successful Response
     */
    200: MonthlyReport;
};

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponse = CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponses[keyof CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponses];

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteError = DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteErrors[keyof DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteErrors];

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetError = GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetErrors[keyof GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetErrors];

export type GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetResponses = {
    /**
     * Response Get School Daily Financial Report V1 Reports Daily  School Id   Year   Month  Get
     * Successful Response
     */
    200: [
        DailyFinancialReport,
        Array<DailyFinancialReportEntry>
    ];
};

export type GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetResponse = GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetResponses[keyof GetSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthGetResponses];

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: {
        /**
         * Noted By
         */
        noted_by?: string | null;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchError = CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchErrors[keyof CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchErrors];

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponse = CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponses[keyof CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponses];

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutError = CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutErrors[keyof CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutErrors];

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponse = CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponses[keyof CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponses];

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries';
};

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetError = GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetErrors[keyof GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetErrors];

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponses = {
    /**
     * Response Get School Daily Report Entries V1 Reports Daily  School Id   Year   Month  Entries Get
     * Successful Response
     */
    200: Array<DailyFinancialReportEntry>;
};

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponse = GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponses[keyof GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponses];

export type UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query: {
        /**
         * Day
         */
        day: number;
        /**
         * Sales
         */
        sales: number;
        /**
         * Purchases
         */
        purchases: number;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entry';
};

export type UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchError = UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchErrors[keyof UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchErrors];

export type UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchResponse = UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchResponses[keyof UpdateSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntryPatchResponses];

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
    };
    query?: {
        /**
         * Offset
         */
        offset?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/v1/reports/daily/{school_id}';
};

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetError = GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetErrors[keyof GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetErrors];

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponses = {
    /**
     * Response Get School Daily Financial Reports V1 Reports Daily  School Id  Get
     * Successful Response
     */
    200: Array<DailyFinancialReport>;
};

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponse = GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponses[keyof GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponses];

export type AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutData = {
    body: DailyFinancialReportEntry;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query: {
        /**
         * Day
         */
        day: number;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}/add';
};

export type AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutError = AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutErrors[keyof AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutErrors];

export type AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutResponse = AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutResponses[keyof AddDailyFinancialReportEntryV1ReportsDailySchoolIdYearMonthAddPutResponses];

export type RootV1HealthcheckGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/healthcheck';
};

export type RootV1HealthcheckGetResponses = {
    /**
     * Response Root V1 Healthcheck Get
     * Successful Response
     */
    200: {
        [key: string]: 'Healthy';
    };
};

export type RootV1HealthcheckGetResponse = RootV1HealthcheckGetResponses[keyof RootV1HealthcheckGetResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}/api` | (string & {});
};